{"version":3,"sources":["../../src/Toolbar/index.js"],"names":["Raw","props","onRef","component","input","onSearch","e","target","HTMLInputElement","setState","searchFilter","v","text","toLowerCase","indexOf","value","isSearching","length","state","a","bind","isInsertMode","HTMLElement","setTimeout","querySelector","focus","plugins","editor","content","filter","layout","padding","map","plugin","k","initialState","createInitialState","children","createInitialChildren","mapStateToProps","Decorated","Toolbar"],"mappings":"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","file":"index.js","sourcesContent":["// @flow\nimport React, { Component } from 'react'\nimport Drawer from 'material-ui/Drawer'\nimport { connect } from 'react-redux'\nimport { isInsertMode } from 'ory-editor-core/lib/selector/display'\nimport { createStructuredSelector } from 'reselect'\nimport { Editor } from 'ory-editor-core/lib'\nimport List from 'material-ui/List/List'\nimport Subheader from 'material-ui/Subheader'\nimport TextField from 'material-ui/TextField'\nimport {\n  LayoutPlugin,\n  ContentPlugin\n} from 'ory-editor-core/lib/service/plugin/classes'\nimport Item from './Item'\nimport Provider from '../Provider'\n\ntype Props = {\n  isInsertMode: boolean,\n  editor: Editor\n}\n\nclass Raw extends Component {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      searchFilter: (a: any) => a,\n      isSearching: false\n    }\n\n    this.onSearch = this.onSearch.bind(this)\n  }\n\n  state: {\n    searchFilter: Function,\n    isSearching: boolean\n  }\n\n  componentDidUpdate() {\n    const input = this.input\n    if (input && this.props.isInsertMode && input instanceof HTMLElement) {\n      setTimeout(() => {\n        const e = input.querySelector('input')\n        if (e) {\n          e.focus()\n        }\n      }, 100)\n    }\n  }\n\n  input: Component<*, *, *>\n\n  onRef = (component: Component<*, *, *>) => {\n    this.input = component\n  }\n\n  onSearch = (e: Event) => {\n    const target = e.target\n    if (target instanceof HTMLInputElement) {\n      this.setState({\n        searchFilter: ((v: any) => ({ text = '' }: Object) =>\n          text.toLowerCase().indexOf(v) > -1)(target.value.toLowerCase()),\n        isSearching: target.value.length > 0\n      })\n    }\n  }\n\n  render() {\n    const { isInsertMode, editor: { plugins } } = this.props\n    const { searchFilter } = this.state\n    const content = plugins.plugins.content.filter(searchFilter)\n    const layout = plugins.plugins.layout.filter(searchFilter)\n\n    return (\n      <Drawer className=\"ory-toolbar-drawer\" open={isInsertMode}>\n        <Subheader>Add plugin to content</Subheader>\n        <div style={{ padding: '0 16px' }} ref={this.onRef}>\n          <TextField\n            hintText=\"Search plugins\"\n            fullWidth\n            onChange={this.onSearch}\n          />\n        </div>\n        <List>\n          {content.length ? <Subheader>Content plugins</Subheader> : null}\n          {content.map((plugin: ContentPlugin, k: Number) => {\n            const initialState = plugin.createInitialState()\n\n            return (\n              <Item\n                plugin={plugin}\n                key={k}\n                insert={{\n                  content: {\n                    plugin,\n                    state: initialState\n                  }\n                }}\n              />\n            )\n          })}\n        </List>\n        <List>\n          {layout.length ? <Subheader>Layout plugins</Subheader> : null}\n          {layout.map((plugin: LayoutPlugin, k: Number) => {\n            const initialState = plugin.createInitialState()\n            const children = plugin.createInitialChildren()\n\n            return (\n              <Item\n                plugin={plugin}\n                key={k}\n                insert={{\n                  ...children,\n                  layout: {\n                    plugin,\n                    state: initialState\n                  }\n                }}\n              />\n            )\n          })}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({ isInsertMode })\n\nconst Decorated = connect(mapStateToProps)(Raw)\n\nclass Toolbar extends Component {\n    constructor(props: Props) {\n      super(props)\n    }\n\n    render() {\n      <Provider {...props}>\n        <Decorated {...props} />\n      </Provider>\n    }\n}\n\nexport default Toolbar\n"]}