{"version":3,"sources":["../../src/Trash/index.js"],"names":["target","hover","props","monitor","item","getItem","isOver","shallow","clearHover","trailing","drop","didDrop","removeCell","id","connectMonitor","connect","connectDropTarget","dropTarget","isOverCurrent","Raw","isLayoutMode","color","fill","types","editor","plugins","Object","keys","layout","content","map","p","name","hasNativePlugin","push","getNativePlugin","mapDispatchToProps","mapStateToProps","isEditMode","isPreviewMode","isInsertMode","isResizeMode","Decorated","Trash"],"mappings":"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","file":"index.js","sourcesContent":["// @flow\nimport React from 'react'\nimport { DropTarget as dropTarget } from 'react-dnd'\nimport DeleteIcon from 'material-ui-icons/Delete'\nimport Button from 'material-ui/Button'\nimport { Editor } from 'ory-editor-core/lib'\nimport { connect } from 'react-redux'\nimport classNames from 'classnames'\nimport { removeCell } from 'ory-editor-core/lib/actions/cell/core'\nimport throttle from 'lodash.throttle'\nimport {\n  isEditMode,\n  isLayoutMode,\n  isPreviewMode,\n  isInsertMode,\n  isResizeMode\n} from 'ory-editor-core/lib/selector/display'\nimport { createStructuredSelector } from 'reselect'\n\nimport Provider from '../Provider'\n\nconst target = {\n  hover: throttle(\n    (props: any, monitor: any) => {\n      const item = monitor.getItem()\n      if (monitor.isOver({ shallow: true })) {\n        item.clearHover()\n      }\n    },\n    200,\n    { trailing: false }\n  ),\n\n  drop(props: { removeCell(id: string): void }, monitor: any) {\n    const item = monitor.getItem()\n    if (monitor.didDrop() || !monitor.isOver({ shallow: true })) {\n      // If the item drop occurred deeper down the tree, don't do anything\n      return\n    }\n\n    props.removeCell(item.id)\n  }\n}\n\nconst connectMonitor = (connect: any, monitor: any) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOverCurrent: monitor.isOver({ shallow: true })\n})\n\nconst Raw = ({ isLayoutMode, connectDropTarget, isOverCurrent }: Object) =>\n  connectDropTarget(\n    <div\n      className={classNames('ory-controls-trash', {\n        'ory-controls-trash-active': isLayoutMode\n      })}\n    >\n      <Button\n        fab\n        color=\"secondary\"\n        disabled={!isOverCurrent}\n        disabledColor=\"rgba(0,0,0,.87)\"\n      >\n        <DeleteIcon\n          style={\n            !isOverCurrent && {\n              color: 'rgba(255,255,255,.87)',\n              fill: 'rgba(255,255,255,.87)'\n            }\n          }\n        />\n      </Button>\n    </div>\n  )\n\nconst types = ({ editor }: { editor: Editor }) => {\n  const plugins = [\n    ...Object.keys(editor.plugins.plugins.layout),\n    ...Object.keys(editor.plugins.plugins.content)\n  ].map(\n    (p: string) =>\n      editor.plugins.plugins.content[p].name ||\n      editor.plugins.plugins.layout[p].name\n  )\n\n  if (editor.plugins.hasNativePlugin()) {\n    plugins.push(editor.plugins.getNativePlugin()().name)\n  }\n\n  return plugins\n}\n\nconst mapDispatchToProps = {\n  removeCell\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isEditMode,\n  isLayoutMode,\n  isPreviewMode,\n  isInsertMode,\n  isResizeMode\n})\n\nconst Decorated = connect(mapStateToProps, mapDispatchToProps)(\n  dropTarget(types, target, connectMonitor)(Raw)\n)\n\nconst Trash = (props: any) => (\n  <Provider {...props}>\n    <Decorated {...props} />\n  </Provider>\n)\n\nexport default Trash\n"]}